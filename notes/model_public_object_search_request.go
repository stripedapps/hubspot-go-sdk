/*
Notes

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PublicObjectSearchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicObjectSearchRequest{}

// PublicObjectSearchRequest struct for PublicObjectSearchRequest
type PublicObjectSearchRequest struct {
	Query *string `json:"query,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
	After *string `json:"after,omitempty"`
	Sorts []string `json:"sorts,omitempty"`
	Properties []string `json:"properties,omitempty"`
	FilterGroups []FilterGroup `json:"filterGroups,omitempty"`
}

// NewPublicObjectSearchRequest instantiates a new PublicObjectSearchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicObjectSearchRequest() *PublicObjectSearchRequest {
	this := PublicObjectSearchRequest{}
	return &this
}

// NewPublicObjectSearchRequestWithDefaults instantiates a new PublicObjectSearchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicObjectSearchRequestWithDefaults() *PublicObjectSearchRequest {
	this := PublicObjectSearchRequest{}
	return &this
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *PublicObjectSearchRequest) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicObjectSearchRequest) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *PublicObjectSearchRequest) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *PublicObjectSearchRequest) SetQuery(v string) {
	o.Query = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *PublicObjectSearchRequest) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicObjectSearchRequest) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *PublicObjectSearchRequest) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *PublicObjectSearchRequest) SetLimit(v int32) {
	o.Limit = &v
}

// GetAfter returns the After field value if set, zero value otherwise.
func (o *PublicObjectSearchRequest) GetAfter() string {
	if o == nil || IsNil(o.After) {
		var ret string
		return ret
	}
	return *o.After
}

// GetAfterOk returns a tuple with the After field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicObjectSearchRequest) GetAfterOk() (*string, bool) {
	if o == nil || IsNil(o.After) {
		return nil, false
	}
	return o.After, true
}

// HasAfter returns a boolean if a field has been set.
func (o *PublicObjectSearchRequest) HasAfter() bool {
	if o != nil && !IsNil(o.After) {
		return true
	}

	return false
}

// SetAfter gets a reference to the given string and assigns it to the After field.
func (o *PublicObjectSearchRequest) SetAfter(v string) {
	o.After = &v
}

// GetSorts returns the Sorts field value if set, zero value otherwise.
func (o *PublicObjectSearchRequest) GetSorts() []string {
	if o == nil || IsNil(o.Sorts) {
		var ret []string
		return ret
	}
	return o.Sorts
}

// GetSortsOk returns a tuple with the Sorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicObjectSearchRequest) GetSortsOk() ([]string, bool) {
	if o == nil || IsNil(o.Sorts) {
		return nil, false
	}
	return o.Sorts, true
}

// HasSorts returns a boolean if a field has been set.
func (o *PublicObjectSearchRequest) HasSorts() bool {
	if o != nil && !IsNil(o.Sorts) {
		return true
	}

	return false
}

// SetSorts gets a reference to the given []string and assigns it to the Sorts field.
func (o *PublicObjectSearchRequest) SetSorts(v []string) {
	o.Sorts = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *PublicObjectSearchRequest) GetProperties() []string {
	if o == nil || IsNil(o.Properties) {
		var ret []string
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicObjectSearchRequest) GetPropertiesOk() ([]string, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *PublicObjectSearchRequest) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []string and assigns it to the Properties field.
func (o *PublicObjectSearchRequest) SetProperties(v []string) {
	o.Properties = v
}

// GetFilterGroups returns the FilterGroups field value if set, zero value otherwise.
func (o *PublicObjectSearchRequest) GetFilterGroups() []FilterGroup {
	if o == nil || IsNil(o.FilterGroups) {
		var ret []FilterGroup
		return ret
	}
	return o.FilterGroups
}

// GetFilterGroupsOk returns a tuple with the FilterGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicObjectSearchRequest) GetFilterGroupsOk() ([]FilterGroup, bool) {
	if o == nil || IsNil(o.FilterGroups) {
		return nil, false
	}
	return o.FilterGroups, true
}

// HasFilterGroups returns a boolean if a field has been set.
func (o *PublicObjectSearchRequest) HasFilterGroups() bool {
	if o != nil && !IsNil(o.FilterGroups) {
		return true
	}

	return false
}

// SetFilterGroups gets a reference to the given []FilterGroup and assigns it to the FilterGroups field.
func (o *PublicObjectSearchRequest) SetFilterGroups(v []FilterGroup) {
	o.FilterGroups = v
}

func (o PublicObjectSearchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicObjectSearchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.After) {
		toSerialize["after"] = o.After
	}
	if !IsNil(o.Sorts) {
		toSerialize["sorts"] = o.Sorts
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.FilterGroups) {
		toSerialize["filterGroups"] = o.FilterGroups
	}
	return toSerialize, nil
}

type NullablePublicObjectSearchRequest struct {
	value *PublicObjectSearchRequest
	isSet bool
}

func (v NullablePublicObjectSearchRequest) Get() *PublicObjectSearchRequest {
	return v.value
}

func (v *NullablePublicObjectSearchRequest) Set(val *PublicObjectSearchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicObjectSearchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicObjectSearchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicObjectSearchRequest(val *PublicObjectSearchRequest) *NullablePublicObjectSearchRequest {
	return &NullablePublicObjectSearchRequest{value: val, isSet: true}
}

func (v NullablePublicObjectSearchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicObjectSearchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


